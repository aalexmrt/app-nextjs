services:

  app-nextjs:
    container_name: app-nextjs
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    env_file: ".env.development"
    networks:
      - app-network



  express-backend:
    container_name: express-backend
    build:
      context: ../express-backend/
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3001"
    volumes:
      - ../express-backend:/express-backend
    env_file: "../express-backend/.env.development"
    networks:
      - app-network
    restart: on-failure


  strapi:
    container_name: strapi
    build:
      context: ../strapi_cms
      dockerfile: Dockerfile
    ports:
      - "1337:1337"
    env_file: "../strapi_cms/.env.development"
    restart: unless-stopped
    networks:
      - app-network
      - strapi
    depends_on:
      - strapi_db
    volumes:
      - ../strapi_cms/config:/opt/app/config
      - ../strapi_cms/src:/opt/app/src
      - ../strapi_cms/package.json:/opt/package.json
      - ../strapi_cms/package-lock.json:/opt/package-lock.json
      - ../strapi_cms/.env:/opt/app/.env
      - ../strapi_cms/public/uploads:/opt/app/public/uploads


  strapi_db:
    container_name: strapi_db
    image: postgres:14
    restart: unless-stopped
    environment:
      - POSTGRES_USER=strapi
      - POSTGRES_PASSWORD=strapi
      - POSTGRES_DB=strapi
    volumes:
      - ../strapi_cms/data/db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - strapi
    

volumes:
  strapi-data:

networks:
  app-network:
    driver: bridge
  strapi:
    name: Strapi
    driver: bridge